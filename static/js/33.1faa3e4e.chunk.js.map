{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","component/ComingSoon/index.js","page/coming-soon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/img/logo-white.png"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","ComingSoonArea","useState","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","useEffect","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","id","className","to","src","logo","alt","onSubmit","e","preventDefault","Swal","fire","type","placeholder","required","ComingSoon","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/33.1faa3e4e.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport logo from '../../assets/img/logo-white.png'\r\n\r\nconst ComingSoonArea = () => {\r\n    // Custom Timer\r\n    const [timerDays, setTimerDays] = useState('00')\r\n    const [timerHours, setTimerHours] = useState('00')\r\n    const [timerMinutes, setTimerMinutes] = useState('00')\r\n    const [timerSeconds, setTimerSeconds] = useState('00')\r\n\r\n    let interval = useRef();\r\n\r\n    const startTimer = () => {\r\n        const countdownDate = new Date('August 19 2022 00:00:00').getTime();\r\n        interval = setInterval(() => {\r\n            const now = new Date().getTime();\r\n            const distance = countdownDate - now;\r\n\r\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24))\r\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\r\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n            if (distance < 0) {\r\n                // stop Our Timer\r\n                clearInterval(interval.current);\r\n            } else {\r\n                // update Timer\r\n                setTimerDays(days);\r\n                setTimerHours(hours);\r\n                setTimerMinutes(minutes);\r\n                setTimerSeconds(seconds);\r\n            }\r\n\r\n        }, 1000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        startTimer()\r\n    })\r\n    return (\r\n        <>\r\n            <section id=\"coming_soon_area\" className=\"ptb-100\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 offset-lg-2\">\r\n                            <div className=\"coming_soon_content\">\r\n                                <Link to=\"/\"><img src={logo} alt=\"img\" /></Link>\r\n                                <div className=\"coming_soon_title\">\r\n                                    <h2>We Are Coming Soon</h2>\r\n                                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n                                        Lorem Ipsum has been the industry's standard dummy text.</p>\r\n                                </div>\r\n                                <div className=\"coming_soon_time\">\r\n                                    <div id=\"countdown_soon\">\r\n                                        <ul>\r\n                                            <li><span>{timerDays}</span>days</li>\r\n                                            <li><span>{timerHours}</span>Hours</li>\r\n                                            <li><span>{timerMinutes}</span>Minutes</li>\r\n                                            <li><span>{timerSeconds}</span>Seconds</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"coming_soon_newsletter\">\r\n                                    <h3>Subscribe for our next update</h3>\r\n                                    <form onSubmit={(e)=> {e.preventDefault(); Swal.fire('Success', 'Thank you for your Subscribtion', 'success')}}>\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Your Email\" required />\r\n                                            <button className=\"theme-btn-one btn-black-overlay btn_md\">subscrib</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComingSoonArea","import React from 'react'\r\nimport ComingSoonArea from '../component/ComingSoon'\r\nconst ComingSoon = () => {\r\n  return (\r\n    <>\r\n      <ComingSoonArea />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComingSoon","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/logo-white.7333c9e5.png\";"],"sourceRoot":""}